@model MVC.Models.Lawsuit

@{
    ViewBag.Title = MVC.Translate.It("New lawsuit");
}

<h2> @ViewBag.Title </h2>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    <fieldset>
        <div class="editor-label">
            @MVC.Translate.It("Name")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.LawsuitName)
            @Html.ValidationMessageFor(model => model.LawsuitName)
        </div>
        <div class="editor-label">
            @MVC.Translate.It("Subcategory")
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.SubCategoryId, new SelectList(ViewData["SubCategories"] as IEnumerable<MVC.Models.SubCategory>, "SubCategoryId", "SubCategoryName"))
            @Html.ValidationMessageFor(model => model.SubCategoryId)
        </div>
        <div class="editor-label">
            @MVC.Translate.It("Web resource")
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.WebResourceId, new SelectList(ViewData["WebResources"] as IEnumerable<MVC.Models.WebResource>, "WebResourceId", "WebResourceKey"))
            @Html.ValidationMessageFor(model => model.LawsuitWeight)
        </div>
        <div class="editor-label">
            @MVC.Translate.It("Weight in list")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.LawsuitWeight)
            @Html.ValidationMessageFor(model => model.LawsuitWeight)
        </div>
        <p>
            <input type="submit" value="@MVC.Translate.It("Add")" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink(MVC.Translate.It("To list"), "Index", "Lawsuit")
</div>
@{/*

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
   */ }
